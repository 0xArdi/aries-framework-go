#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
name: build
on: [push, pull_request]
jobs:
  unitTest:
    name: Unit test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-18.04, macOS-10.14]
    steps:

    - name: Setup Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - uses: actions/checkout@v1

    - name: Run unit test
      timeout-minutes: 10
      run: make unit-test

    - name: Upload coverage to Codecov
      timeout-minutes: 10
      # GitHub Actions currently only allow secret usage access during push events
      if: github.event_name == 'push' && matrix.os == 'ubuntu-18.04'
      uses: codecov/codecov-action@v1.0.2
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: ./coverage.txt

  unitTestWasm:
    name: Unit test wasm
    runs-on: ubuntu-18.04
    timeout-minutes: 10
    steps:

      - name: Setup Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - uses: actions/checkout@v1

      - name: Run unit test wasm
        timeout-minutes: 10
        run: make unit-test-wasm

  bddTest:
    name: BDD test
    runs-on: ubuntu-18.04
    timeout-minutes: 10
    steps:

      - name: Setup Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - uses: actions/checkout@v1

      - name: Run BDD test
        timeout-minutes: 10
        run: make bdd-test

  checks:
    name: Checks
    timeout-minutes: 10
    runs-on: ubuntu-18.04
    steps:
      - name: Setup Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - uses: actions/checkout@v1

      - name: Run checks
        timeout-minutes: 10
        run: make checks

  publish:
    name: Publish images
    if: github.event_name == 'push'
    needs: [checks, unitTest, unitTestWasm, bddTest]
    runs-on: ubuntu-18.04
    timeout-minutes: 10
    steps:
      - name: Setup Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - uses: actions/checkout@v1

      - name: Run script
        run: |
              function logout {
                docker logout docker.pkg.github.com
              }
              trap logout EXIT
              source ci/version_var.sh
              echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com --username $GITHUB_ACTOR --password-stdin
              make agent-rest-docker
              docker tag aries-framework-go/agent-rest:latest  docker.pkg.github.com/hyperledger/aries-framework-go/agent-rest:$AGENT_IMAGE_TAG
              docker push docker.pkg.github.com/hyperledger/aries-framework-go/agent-rest:$AGENT_IMAGE_TAG
